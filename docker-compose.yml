services:

  backend:
    image: 192.168.1.104:5000/backend:latest
    build: ./backend
    container_name: backend
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload 
    restart: always
    ports:
      - "81:8000"
    depends_on:
      - mongodb
    networks:
      - umai_bridge

  mongodb:
    container_name: mongodb
    logging:
      driver: "none"
    hostname: mongodb
    image: mongo:6.0.6
    networks:
      - umai_bridge
    ports:
      - '27017:27017'
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=clevtech
      - MONGO_INITDB_ROOT_PASSWORD=clevtech
    volumes:
      - ./volumes/data:/data/db

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    ports:
      - "8061:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ADMINUSERNAME: clevtech
      ME_CONFIG_MONGODB_ADMINPASSWORD: clevtech
      ME_CONFIG_BASICAUTH: true
      ME_CONFIG_BASICAUTH_USERNAME: ml
      ME_CONFIG_BASICAUTH_PASSWORD: clevtech
    depends_on:
      - mongodb
    networks:
      - umai_bridge

  ml:
    image: 192.168.1.104:5000/recorder:latest
    build: ./ml
    container_name: ml
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      - minio
    networks:
      - umai_bridge
    ports:
      - "82:8000"
    restart: always
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: clevtech
      MINIO_ROOT_PASSWORD: clevtech
    command: server /data --console-address ":9090"
    ports:
      - "9000:9000"
      - "9090:9090"
    restart: always
    networks:
      - umai_bridge
    volumes:
      - ./volumes/minio_data:/data


networks:
  umai_bridge:
    name: umai_bridge
    driver: bridge

volumes:
  data:
    driver: bridge